/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppDashboardRouteImport } from './routes/app/dashboard'
import { Route as AuthSignupRouteImport } from './routes/Auth/signup'
import { Route as AuthSigninRouteImport } from './routes/Auth/signin'
import { Route as AuthEmailRouteImport } from './routes/Auth/email'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/app/dashboard',
  path: '/app/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/Auth/signup',
  path: '/Auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/Auth/signin',
  path: '/Auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthEmailRoute = AuthEmailRouteImport.update({
  id: '/Auth/email',
  path: '/Auth/email',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Auth/email': typeof AuthEmailRoute
  '/Auth/signin': typeof AuthSigninRoute
  '/Auth/signup': typeof AuthSignupRoute
  '/app/dashboard': typeof AppDashboardRoute
  '/app': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Auth/email': typeof AuthEmailRoute
  '/Auth/signin': typeof AuthSigninRoute
  '/Auth/signup': typeof AuthSignupRoute
  '/app/dashboard': typeof AppDashboardRoute
  '/app': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Auth/email': typeof AuthEmailRoute
  '/Auth/signin': typeof AuthSigninRoute
  '/Auth/signup': typeof AuthSignupRoute
  '/app/dashboard': typeof AppDashboardRoute
  '/app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Auth/email'
    | '/Auth/signin'
    | '/Auth/signup'
    | '/app/dashboard'
    | '/app'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Auth/email'
    | '/Auth/signin'
    | '/Auth/signup'
    | '/app/dashboard'
    | '/app'
  id:
    | '__root__'
    | '/'
    | '/Auth/email'
    | '/Auth/signin'
    | '/Auth/signup'
    | '/app/dashboard'
    | '/app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthEmailRoute: typeof AuthEmailRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AppDashboardRoute: typeof AppDashboardRoute
  AppIndexRoute: typeof AppIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/dashboard': {
      id: '/app/dashboard'
      path: '/app/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Auth/signup': {
      id: '/Auth/signup'
      path: '/Auth/signup'
      fullPath: '/Auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Auth/signin': {
      id: '/Auth/signin'
      path: '/Auth/signin'
      fullPath: '/Auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Auth/email': {
      id: '/Auth/email'
      path: '/Auth/email'
      fullPath: '/Auth/email'
      preLoaderRoute: typeof AuthEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthEmailRoute: AuthEmailRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AppDashboardRoute: AppDashboardRoute,
  AppIndexRoute: AppIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
